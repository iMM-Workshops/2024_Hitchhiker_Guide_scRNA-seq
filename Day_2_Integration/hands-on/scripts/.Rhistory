"t293" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz",
"jurkat" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz",
"jurkat_t293_50:50" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat:293t_50:50/jurkat:293t_50:50_filtered_gene_bc_matrices.tar.gz"
)
# Download & import data sets 1-by-1
seu.list <- list()
for (f in names(data2down)) {
f.path <- gsub(".tar.gz", "", file.path(out.dir, basename(data2down[[f]])))
untar.path <- file.path(out.dir, "filtered_matrices_mex/hg19")
cat("Downloading data set", f, "to", paste0(f.path, ".tar.gz"), "...\n")
download.file(url=data2down[[f]], destfile=paste0(f.path, ".tar.gz"))
cat("Untar compressed data set", f, "to", untar.path, "...\n")
untar(tarfile=paste0(f.path, ".tar.gz"), exdir=out.dir)
cat("Importing gene expression matrix for dat set", f,"from",
untar.path,"...\n")
seu.list[[f]] <- CreateSeuratObject(counts = Read10X(data.dir = untar.path))
cat("Cleaning folder...\n")
file.remove(paste0(f.path, ".tar.gz")); unlink(dirname(untar.path), recursive=TRUE);
cat("Finished!\n\n")
}
out.dir
# Create directory to save files
output <- file.path(data.dir, "jurkat.rds")
# List of data sets to download
data2down <- list(
"t293" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz",
"jurkat" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz",
"jurkat_t293_50:50" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat:293t_50:50/jurkat:293t_50:50_filtered_gene_bc_matrices.tar.gz"
)
# Download & import data sets 1-by-1
seu.list <- list()
for (f in names(data2down)) {
f.path <- gsub(".tar.gz", "", file.path(data.dir, basename(data2down[[f]])))
untar.path <- file.path(data.dir, "filtered_matrices_mex/hg19")
cat("Downloading data set", f, "to", paste0(f.path, ".tar.gz"), "...\n")
download.file(url=data2down[[f]], destfile=paste0(f.path, ".tar.gz"))
cat("Untar compressed data set", f, "to", untar.path, "...\n")
untar(tarfile=paste0(f.path, ".tar.gz"), exdir=data.dir)
cat("Importing gene expression matrix for dat set", f,"from",
untar.path,"...\n")
seu.list[[f]] <- CreateSeuratObject(counts = Read10X(data.dir = untar.path))
cat("Cleaning folder...\n")
file.remove(paste0(f.path, ".tar.gz")); unlink(dirname(untar.path), recursive=TRUE);
cat("Finished!\n\n")
}
# Check if gene names are exactly the same & cell ids are unique
g.list <- lapply(seu.list, row.names)
for (g in length(g.list)) {
for (i in g.list[-g]) {
stopifnot(all(g.list[[g]]==i))
}
}
for (d in names(seu.list)) {
# colnames(seu.list[[d]]) <- paste(d, colnames(seu.list[[d]]), sep="_")
seu.list[[d]]$batch <- d
}
head(colnames(seu.list$t293))
head(colnames(seu.list$`jurkat_t293_50:50`))
head(colnames(seu.list$`jurkat_t293_50:50`@meta.data))
head(seu.list$`jurkat_t293_50:50`@meta.data)
# Merge SCE list
seu <- merge(seu.list$t293, y = c(seu.list$jurkat, seu.list$`jurkat_t293_50:50`),
add.cell.ids = c("t293", "jurkat", "jurkat_t293_50:50"), project = "jurkat")
head(seu@meta.data)
head(seu@meta.data$batch)
uniqeu(seu@meta.data$batch)
unique(seu@meta.data$batch)
head(row.names(seu.list$t293))
table(duplicated(row.names(seu.list$t293)))
table(duplicated(row.names(seu.list[[2]])))
table(duplicated(row.names(seu.list[[3]])))
table(duplicated(row.names(seu)))
rm(seu.list); gc();
Layers(seu)
seu
# Packages
library("Seurat")
if (!"SeuratData" %in% installed.packages()) devtools::install_github("satijalab/seurat-data") # if isn't installed, install 'SeuratData'
library("SeuratData")
# Set seed
set.seed(1024)
# Define output directory
data.dir <- "../data"
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (1) w/o shared cell types: ifnb x panc8
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (2) w/ shared cell types: ifnb
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (3) w/ some shared cell types: jurkat
# Create directory to save files
output <- file.path(data.dir, "jurkat.rds")
# List of data sets to download
data2down <- list(
"t293" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz",
"jurkat" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz",
"jurkat_t293_50:50" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat:293t_50:50/jurkat:293t_50:50_filtered_gene_bc_matrices.tar.gz"
)
# Download & import data sets 1-by-1
seu.list <- list()
for (f in names(data2down)) {
f.path <- gsub(".tar.gz", "", file.path(data.dir, basename(data2down[[f]])))
untar.path <- file.path(data.dir, "filtered_matrices_mex/hg19")
cat("Downloading data set", f, "to", paste0(f.path, ".tar.gz"), "...\n")
download.file(url=data2down[[f]], destfile=paste0(f.path, ".tar.gz"))
cat("Untar compressed data set", f, "to", untar.path, "...\n")
untar(tarfile=paste0(f.path, ".tar.gz"), exdir=data.dir)
cat("Importing gene expression matrix for dat set", f,"from",
untar.path,"...\n")
seu.list[[f]] <- CreateSeuratObject(counts = Read10X(data.dir = untar.path))
cat("Cleaning folder...\n")
file.remove(paste0(f.path, ".tar.gz")); unlink(dirname(untar.path), recursive=TRUE);
cat("Finished!\n\n")
}
# Check if gene names are exactly the same & add 'batch' labels to 'meta.data'
g.list <- lapply(seu.list, row.names)
for (g in length(g.list)) {
for (i in g.list[-g]) {
stopifnot(all(g.list[[g]]==i))
}
}
for (d in names(seu.list)) {
seu.list[[d]]$batch <- d
}
?merge
# Merge seurat list
seu <- merge(x = seu.list$t293, y = list(seu.list$jurkat, seu.list$`jurkat_t293_50:50`),
add.cell.ids = c("t293", "jurkat", "jurkat_t293_50:50"), project = "jurkat")
seu
rm(seu.list); gc();
seu.list
#--------------------------Create data sets script-----------------------------#
# Author: António Sousa (e-mail: aggode@utu.fi)
# Description: create data sets for the course:
#(1) w/o shared cell types
#(2) w/ shared cell types
#(3) w/ some shared cell types
# Date: 22/06/2024
# Last update: 22/06/20224
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## Import packages & set env
# Packages
library("Seurat")
if (!"SeuratData" %in% installed.packages()) devtools::install_github("satijalab/seurat-data") # if isn't installed, install 'SeuratData'
library("SeuratData")
# Set seed
set.seed(1024)
# Define output directory
data.dir <- "../data"
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (1) w/o shared cell types: ifnb x panc8
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (2) w/ shared cell types: ifnb
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (3) w/ some shared cell types: jurkat
# Create directory to save files
output <- file.path(data.dir, "jurkat.rds")
# List of data sets to download
data2down <- list(
"t293" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz",
"jurkat" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz",
"jurkat_t293_50:50" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat:293t_50:50/jurkat:293t_50:50_filtered_gene_bc_matrices.tar.gz"
)
# Download & import data sets 1-by-1
seu.list <- list()
for (f in names(data2down)) {
f.path <- gsub(".tar.gz", "", file.path(data.dir, basename(data2down[[f]])))
untar.path <- file.path(data.dir, "filtered_matrices_mex/hg19")
cat("Downloading data set", f, "to", paste0(f.path, ".tar.gz"), "...\n")
download.file(url=data2down[[f]], destfile=paste0(f.path, ".tar.gz"))
cat("Untar compressed data set", f, "to", untar.path, "...\n")
untar(tarfile=paste0(f.path, ".tar.gz"), exdir=data.dir)
cat("Importing gene expression matrix for dat set", f,"from",
untar.path,"...\n")
seu.list[[f]] <- CreateSeuratObject(counts = Read10X(data.dir = untar.path))
cat("Cleaning folder...\n")
file.remove(paste0(f.path, ".tar.gz")); unlink(dirname(untar.path), recursive=TRUE);
cat("Finished!\n\n")
}
# Check if gene names are exactly the same & add 'batch' labels to 'meta.data'
g.list <- lapply(seu.list, row.names)
for (g in length(g.list)) {
for (i in g.list[-g]) {
stopifnot(all(g.list[[g]]==i))
}
}
for (d in names(seu.list)) {
seu.list[[d]]$batch <- d
}
t293 <- seu.list$t293
jurkat <- seu.list$jurkat
jurkat_t293_50_50 <- seu.list$`jurkat_t293_50:50`
seu <- merge(x = t293, y = list(jurkat, jurkat_t293_50_50),
add.cell.ids = c("t293", "jurkat", "jurkat_t293_50:50"), project = "jurkat")
seu
''
layers(sey)
layers(seu)
Layers(seu)
seu[["RNA"]] <- split(x = seu[["RNA"]], f = seu$batch)
seu$batch
packageVersion("Seurat")
seu[['RNA']]  <- JoinLayers(object = seu[['RNA']])
seu
seu[["RNA"]] <- split(x = seu[["RNA"]], f = seu$batch)
seu
#--------------------------Create data sets script-----------------------------#
# Author: António Sousa (e-mail: aggode@utu.fi)
# Description: create data sets for the course:
#(1) w/o shared cell types
#(2) w/ shared cell types
#(3) w/ some shared cell types
# Date: 22/06/2024
# Last update: 22/06/20224
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## Import packages & set env
# Packages
library("Seurat")
if (!"SeuratData" %in% installed.packages()) devtools::install_github("satijalab/seurat-data") # if isn't installed, install 'SeuratData'
library("SeuratData")
# Set seed
set.seed(1024)
# Define output directory
data.dir <- "../data"
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (1) w/o shared cell types: ifnb x panc8
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (2) w/ shared cell types: ifnb
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (3) w/ some shared cell types: jurkat
# Create directory to save files
output <- file.path(data.dir, "jurkat.rds")
# List of data sets to download
data2down <- list(
"t293" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz",
"jurkat" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz",
"jurkat_t293_50:50" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat:293t_50:50/jurkat:293t_50:50_filtered_gene_bc_matrices.tar.gz"
)
# Download & import data sets 1-by-1
seu.list <- list()
for (f in names(data2down)) {
f.path <- gsub(".tar.gz", "", file.path(data.dir, basename(data2down[[f]])))
untar.path <- file.path(data.dir, "filtered_matrices_mex/hg19")
cat("Downloading data set", f, "to", paste0(f.path, ".tar.gz"), "...\n")
download.file(url=data2down[[f]], destfile=paste0(f.path, ".tar.gz"))
cat("Untar compressed data set", f, "to", untar.path, "...\n")
untar(tarfile=paste0(f.path, ".tar.gz"), exdir=data.dir)
cat("Importing gene expression matrix for dat set", f,"from",
untar.path,"...\n")
seu.list[[f]] <- CreateSeuratObject(counts = Read10X(data.dir = untar.path))
cat("Cleaning folder...\n")
file.remove(paste0(f.path, ".tar.gz")); unlink(dirname(untar.path), recursive=TRUE);
cat("Finished!\n\n")
}
library("Seurat")
if (!"SeuratData" %in% installed.packages()) devtools::install_github("satijalab/seurat-data") # if isn't installed, install 'SeuratData'
library("SeuratData")
# Set seed
set.seed(1024)
# Define output directory
data.dir <- "../data"
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (1) w/o shared cell types: ifnb x panc8
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (2) w/ shared cell types: ifnb
#
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## (3) w/ some shared cell types: jurkat
# Create directory to save files
options(timeout = 60*10)
output <- file.path(data.dir, "jurkat.rds")
# List of data sets to download
data2down <- list(
"t293" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/293t/293t_filtered_gene_bc_matrices.tar.gz",
"jurkat" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat/jurkat_filtered_gene_bc_matrices.tar.gz",
"jurkat_t293_50:50" = "https://cf.10xgenomics.com/samples/cell-exp/1.1.0/jurkat:293t_50:50/jurkat:293t_50:50_filtered_gene_bc_matrices.tar.gz"
)
# Download & import data sets 1-by-1
seu.list <- list()
for (f in names(data2down)) {
f.path <- gsub(".tar.gz", "", file.path(data.dir, basename(data2down[[f]])))
untar.path <- file.path(data.dir, "filtered_matrices_mex/hg19")
cat("Downloading data set", f, "to", paste0(f.path, ".tar.gz"), "...\n")
download.file(url=data2down[[f]], destfile=paste0(f.path, ".tar.gz"))
cat("Untar compressed data set", f, "to", untar.path, "...\n")
untar(tarfile=paste0(f.path, ".tar.gz"), exdir=data.dir)
cat("Importing gene expression matrix for dat set", f,"from",
untar.path,"...\n")
seu.list[[f]] <- CreateSeuratObject(counts = Read10X(data.dir = untar.path))
cat("Cleaning folder...\n")
file.remove(paste0(f.path, ".tar.gz")); unlink(dirname(untar.path), recursive=TRUE);
cat("Finished!\n\n")
}
# Check if gene names are exactly the same & add 'batch' labels to 'meta.data'
g.list <- lapply(seu.list, row.names)
for (g in length(g.list)) {
for (i in g.list[-g]) {
stopifnot(all(g.list[[g]]==i))
}
}
for (d in names(seu.list)) {
seu.list[[d]]$batch <- d
}
# Merge seurat list
seu <- merge(x = seu.list$t293, y = list(seu.list$jurkat, seu.list$`jurkat_t293_50:50`),
add.cell.ids = c("t293", "jurkat", "jurkat_t293_50:50"), project = "jurkat")
rm(seu.list); gc();
seu[['RNA']]  <- JoinLayers(object = seu[['RNA']])
seu
seu
# Cell type
counts <- GetAssayData(seu, assay = "RNA", layer = "counts")
counts[1:30,1:20]
counts[1:30,1:30]
counts[1:50,1:30]
table((counts["CD3D",]>0))
head((counts["CD3D",]>0))
seu$jurkat.pos.CD3D <- (counts["CD3D",]>0)
seu$t293.pos.XIST <- (counts["XIST",]>0)
seu@meta.data[1:10,1:10]
seu@meta.data[1:10,]
seu$cell_type <- ifelse(seu$jurkat.pos.CD3D & !seu$t293.pos.XIST, "Jurkat",
ifelse(!seu$jurkat.pos.CD3D & seu$t293.pos.XIST, "293T",
NA))
table(is.na(seu$cell_type))
ncol(seu)
rm(counts); gc();
seu <- subset(seu, cells = (!is.na(sce$cell_type)))
seu <- subset(seu, cells = (!is.na(seu$cell_type)))
seu <- subset(seu, cells = colnames(seu)[!is.na(seu$cell_type)])
ncol(seu)
# Save object
saveRDS(object=seu, file=output)
ls()
data.dir
ls() != data.dir
ls()[ls() != data.dir]
ls()[ls() != "data.dir"]
?rm
# Clean env vars
rm(list = ls()[ls() != "data.dir"])
# Clean env vars
rm(list = ls()[ls() != "data.dir"]); gc();
ls()
library("Seurat")
if (!"SeuratData" %in% installed.packages()) devtools::install_github("satijalab/seurat-data") # if isn't installed, install 'SeuratData'
library("SeuratData")
# Set seed
set.seed(1024)
# Define output directory
data.dir <- "../data"
# Install data
InstallData("ifnb")
# Create directory to save files
options(timeout = 60*10)
output <- file.path(data.dir, "ifnb.rds")
# Install data
InstallData("ifnb")
# Load data
ifnb <- LoadData("ifnb")
ifnb
ifnb@assays$RNA@layers$counts[1:10,1:10]
ifnb@assays$RNA@layers$data[1:10,1:10]
seu <- subset(seu, cells = colnames(seu)[!is.na(seu$cell_type)])
ifnb
# Save object
saveRDS(object=ifnb, file=output)
AvailableData()
# Packages
library("Seurat")
if (!"SeuratData" %in% installed.packages()) devtools::install_github("satijalab/seurat-data") # if isn't installed, install 'SeuratData'
library("SeuratData")
# Set seed
set.seed(1024)
# Define output directory
data.dir <- "../data"
# Download options
options(timeout = 60*10)
# Create directory to save files
output <- file.path(data.dir, "ifnb_panc8.rds")
InstallData("panc8")
panc8 <- LoadData("panc8")
panc8
class(panc8$tech)
unique(panc8$tech)
unique(panc8$replicate)
unique(panc8$dataset)
table(panc8$dataset)
table(panc8$dataset=="indrop1")
length(row.names(panc8)[panc8$dataset=="indrop1"])
length(colnames(panc8)[panc8$dataset=="indrop1"])
panc8 <- subset(panc8, cells = colnames(panc8)[panc8$dataset=="indrop1"]) # select only batch sample from 'indrop1' tech
panc8
panc8@assays$RNA@layers$counts[1:10,1:10]
rm(panc8)
rm(panc8); gc();
# Load data & subset data sets
ifnb <- LoadData("ifnb")
length(colnames(ifnb)[ifnb$stim=="CTRL"])
table(ifnb$stim=="CTRL")
rm(ifnb)
gc()
# Install data
InstallData("pbmc3k")
# Load data & subset data sets
pbmc3k <- LoadData("pbmc3k")
pbmc3k
pbmc3k@assays$RNA@layers$counts[1:10,1:10]
pbmc3k@assays$RNA@layers$counts[1:50,1:10]
head(pbmc3k@meta.data)
head(panc8@meta.data)
panc8
rm(panc8); gc();
#--------------------------Create data sets script-----------------------------#
# Author: António Sousa (e-mail: aggode@utu.fi)
# Description: create data sets for the course:
#(1) w/o shared cell types
#(2) w/ shared cell types
#(3) w/ some shared cell types
# Date: 22/06/2024
# Last update: 22/06/20224
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
#
## Import packages & set env
# Packages
library("Seurat")
if (!"SeuratData" %in% installed.packages()) devtools::install_github("satijalab/seurat-data") # if isn't installed, install 'SeuratData'
library("SeuratData")
# Set seed
set.seed(1024)
# Define output directory
data.dir <- "../data"
# Download options
options(timeout = 60*10)
# Create directory to save files
output <- file.path(data.dir, "pbmc3k_panc8.rds")
pbmc3k <- LoadData("pbmc3k")
panc8 <- LoadData("panc8")
panc8 <- subset(panc8, cells = colnames(panc8)[panc8$dataset=="indrop1"]) # select only batch sample from 'indrop1' tech
gc();
head(pbmc3k@meta.data)
head(panc8@meta.data)
# Merge them
pbmc3k$batch <- "pbmc"
colnames(pbmc3k@meta.data)
colnames(pbmc3k@meta.data)[4]
colnames(pbmc3k@meta.data)[4] <- "cell_type"
colnames(pbmc3k@meta.data)
panc8$batch <- "pancreas"
colnames(panc8)[7]
colnames(panc8@meta.data)[7]
colnames(panc8@meta.data)[7] <- "cell_type"
colnames(panc8@meta.data)[c(1:3, 7, 9)]
panc8@meta.data <- panc8@meta.data[,c(1:3, 7, 9)]
head(pbmc3k@meta.data)
head(panc8@meta.data)
table(row.names(panc8) %in% row.names(pbmc3k))
table(row.names(panc8) %in% )
head(row.names(pbmc3k))
head(row.names(panc8))
seu <- merge(x = pbmc3k, y = panc8, add.cell.ids = c("pbmc", "pancreas"),
project = "pbmc3k_panc8")
rm(list = c("pbmc3k", "panc8")); gc();
# Save object
saveRDS(object=seu, file=output)
# Clean env vars
rm(list = ls()[ls() != "data.dir"]); gc();
gc()
ls()
seu
packageVersion("Seurat")
packageVersion("SeuratData")
version
